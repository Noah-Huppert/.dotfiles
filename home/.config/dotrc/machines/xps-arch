# Restart polybar
function polystart() {
	# Run polybar launch script with nohup, redirect output to null
	echo "Restarting Polybar"
	($HOME/.config/polybar/launch.sh > /dev/null 2>&1) & disown
}

# Monitor variables: Hold xrandr output identifiers to use in xtend-{on,off} 
# commands
# Identifier for laptop screen
export XRDR_LAPTOP="eDP-1"

# Identifier for HDMI USB-C dongle output
export XRDR_HDMI_DONGLE="DP-1"

# Setup second monitor
function xtend-on() {
	# Arguments
	xtend_dir="--below"
	if [ ! -z "$1"  ]; then
		xtend_dir="$1"
	fi

	echo "Setting up extended display"

	# Set xrandr to extend HDMI dongle
	echo "-- -- Configuring xrandr"
	echo "          Laptop to the $xtend_dir of monitor"

	xrandr --output "$XRDR_HDMI_DONGLE" --auto
	xrandr --output "$XRDR_LAPTOP" "$xtend_dir" "$XRDR_HDMI_DONGLE"

	# Restart polybar so it displays on both screens
	echo "-- -- Restarting polybar"
	polystart

	# Map bspwm desktops: [0-5]: laptop, [6-10]: hdmi dongle
	echo "-- -- Configuring bspwm desktops"
	bspc monitor "$XRDR_LAPTOP" -n 0 -d I II III IV V
	bspc monitor "$XRDR_HDMI_DONGLE" -n 1 -d VI VII VIII IX X
	
	# Fix background
	echo "-- -- Fixing background"
	bkground
}

function xtend-off() {
	echo "Shutting down extended display"

	# Use xrandr to turn off DP-1 output
	echo "-- -- Turning off display with xrandr"
	xrandr --output "$XRDR_HDMI_DONGLE" --off

	# Configure bspwm desktops
	echo "-- -- Configuring bspwm desktops"
	bspc monitor -d I II III IV V VI VII VIII IX X

	# Restart polybar to only be on one display
	polystart
}

# APK Tool
export PATH="$PATH:$HOME/Documents/bin/apktool"

# Stockfish
export PATH="$PATH:$HOME/Documents/bin/stockfish"

# Python local bin
export PATH="$PATH:$HOME/.local/bin"

# Google Cloud Bin
export PATH="$PATH:/opt/google-cloud-sdk/bin"

# Dart
export PATH="$PATH:/opt/dart-sdk-dev/bin:$HOME/.pub-cache/bin"

# Admithub
# -- -- appconf tool
export PATH="$PATH:$HOME/Documents/workspace/work/AdmitHub/infrastructure-core/appconf"

# Android
export ANDROID_NDK_HOME="/opt/android-ndk"
export ANDROID_SDK_ROOT="/opt/android-sdk/"

# github.com/Noah-Huppert/kube-namespace
. $HOME/Documents/workspace/www/kube-namespace/kubens
alias kubectl="kubens run"

# Python libraries
#export LD_LIBRARY_PATH="/usr/lib $(which python)"

# Go migrate tool
# https://github.com/golang-migrate/migrate
export PATH="$PATH:/opt/migrate"

# Private scripts repo
export PATH="$PATH:$HOME/Documents/bin/private-scripts"

# Default screen shot directory for snip script
export SNIP_DEFAULT_OUT="$HOME/Documents/pictures/screenshots"

# Istio
export PATH="$PATH:/opt/istio/bin"

# Linkerd
export PATH="$PATH:$HOME/.linkerd2/bin"

# Container bin
#export PATH="$PATH:$HOME/Documents/bin/.dotfiles/containers/bin"

# Kiln
export PATH="$PATH:$HOME/Documents/workspace/www/kiln"

# salt-pillar-linter
export PATH="$PATH:$HOME/Documents/workspace/devops/salt-pillar-linter"

# Enable go modules
export GO111MODULE=on
